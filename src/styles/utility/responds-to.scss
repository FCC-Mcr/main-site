/// Generates a media query based on the key passed in the first argument. An optional second
/// @include respond-to('xs') {...}
/// @include respond-to('md') {...}
/// @include respond-to('md', 'max') {...}
@import "../config/breakpoints.scss";

@mixin responds-to($breakpoint, $size: "min") {
  $value: map-get($breakpoint-map, $breakpoint);
  @if $value {
    @if ($size == "min") {
      @media (min-width: #{$value}) {
        @content;
      }
    } @else if ($size == "max") {
      @media (max-width: #{$value}) {
        @content;
      }
    } @else {
      @warn 'arguments "min" or "max" accepted as second argument - argument "min" is default';
    }
  } @else {
    @warn '`#{$breakpoint}` doesn\'t exist in the breakpoints map.';
  }
}
